/*
                                                         Задача:
                                    Спроектувати об'єктну модель для заданої наочної області.
                У роботі в обов'язковому порядку має бути реалізований ВЕСЬ потрібний в завданні функціонал.

                                                      Наочна область:
                                        Таксопарк. Визначити ієрархію легкових автомобілів.
                                         Створити таксопарк. Порахувати вартість автопарку.
                                     Провести сортування автомобілів парку по витраті палива.
                            Знайти автомобіль в компанії, відповідний заданому діапазону параметрів.


                                                        Критерії:

- Використовувати: класи, спадкоємство, інтерфейси, поліморфізм, інкапсуляція
- Кожен клас, метод і змінна повинні мати вичерпні сенс назву і інформативний склад.
    Необхідно точно продумати, які класи необхідні для вирішення завдання.
- Спадкоємство повинне застосовуватися лише тоді, коли це має сенс.
- Класи мають бути грамотно розкладені по файлах.
- Завдання є якоюсь наочною областю, в якій потрібно виділити необхідну ієрархію класів і
    реалізувати її за допомогою ООП (використовуючи спадкоємство, якщо необхідно або реалізовуючи інтерфейси).
- У кожному класі мають бути поля і методи, які ви порахуєте необхідними.
    Програма повинна створювати об'єкти різних класів виділеної наочної області, об'єднувати їх
        в якийсь набір об'єктів (не використовувати колекції). Як правило, виконати пошук по
            заданих критеріях об'єктів, задовольняючим умовам пошук з отриманого набору об'єктів.
- В якості структур для зберігання даних використовувати масиви
- Для реалізації пошуку реалізувати методи розширення
- Код має бути відформатованим
- Ієрархія спадкоємства має бути мінімум 4 кроки в глибину, не включаючи в розрахунок самий базовий.

 */

namespace TaxiCompany
{
    internal class Program
    {
        public static void Main(string[] args)
        {
            try
            {
                Starter.Run();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Exception! {ex.Message}");
            }

            Console.Write("\nPress any key to continue . . .");
            Console.ReadKey();
        }
    }
}